#ifndef __TOP_TEST_H__
#define __TOP_TEST_H___



/* the input_block array contains the values obtained by
   subtracting 128 to the following 8x8 array of pixels */

static dct_data_t original_block[8][8] = {
  {168,    161,    161,    150,    154,    168,    164,    154},
  {171,    154,    161,    150,    157,    171,    150,    164},
  {171,    168,    147,    164,    164,    161,    143,    154},
  {164,    171,    154,    161,    157,    157,    147,    132},
  {161,    161,    157,    154,    143,    161,    154,    132},
  {164,    161,    161,    154,    150,    157,    154,    140},
  {161,    168,    157,    154,    161,    140,    140,    132},
  {154,    161,    157,    150,    140,    132,    136,    128}
 };


static dct_data_t input_block[8*8] = {
   40,33,33,22,26,40,36,26,
   43,26,33,22,29,43,22,36,
   43,40,19,36,36,33,15,26,
   36,43,26,33,29,29,19,4 ,
   33,33,29,26,15,33,26,4 ,
   36,33,33,26,22,29,26,12,
   33,40,29,26,33,12,12,4 ,
   26,33,29,22,12,4 ,8 ,0
};

/*
   The following matrix is defined as: [C(mn)] = k(m)/2 cos [m(2n+1)pi/16]
   with pi=3.14...
   and k(m) = 1         if (m !=0)
   and k(m) = 1/sqrt(2) if m==0
*/

static const double C_matrix[8][8] = {
  {0.353553, 0.353553, 0.353553, 0.353553, 0.353553, 0.353553, 0.353553, 0.353553},
  {0.490393, 0.415735, 0.277785, 0.097545,-0.097545,-0.277785,-0.415735,-0.490393},
  {0.461940, 0.191342,-0.191342,-0.461940,-0.461940,-0.191342, 0.191342, 0.461940},
  {0.415735,-0.097545,-0.490393,-0.277785, 0.277785, 0.490393, 0.097545,-0.415735},
  {0.353553,-0.353553,-0.353553, 0.353553, 0.353553,-0.353553,-0.353553, 0.353554},
  {0.277785,-0.490393, 0.097545, 0.415735,-0.415735,-0.097545, 0.490393,-0.277785},
  {0.191342,-0.461940, 0.461940,-0.191342,-0.191342, 0.461940,-0.461940, 0.191342},
  {0.097545,-0.277785, 0.415735,-0.490393, 0.490393,-0.415735, 0.277785,-0.097545}
};

/****************************************************/
#endif
